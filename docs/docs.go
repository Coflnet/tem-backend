// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/player/{uuid}": {
            "get": {
                "description": "get a player by his player uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "summary": "PlayerUUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_api.PlayerResponse"
                        }
                    }
                }
            }
        },
        "/playerProfile/{uuid}": {
            "get": {
                "description": "get a player by his profile uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "summary": "ProfileUUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_api.PlayerResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github.com_Coflnet_tem-backend_internal_api.PlayerResponse": {
            "type": "object",
            "properties": {
                "generic_items": {
                    "type": "array",
                    "items": {}
                },
                "generic_pets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "$ref": "#/definitions/mongo.PlayerId"
                },
                "items": {
                    "type": "array",
                    "items": {}
                },
                "pets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.Pet"
                    }
                }
            }
        },
        "internal_api.PlayerResponse": {
            "type": "object",
            "properties": {
                "generic_items": {
                    "type": "array",
                    "items": {}
                },
                "generic_pets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "$ref": "#/definitions/mongo.PlayerId"
                },
                "items": {
                    "type": "array",
                    "items": {}
                },
                "pets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.Pet"
                    }
                }
            }
        },
        "mongo.Owner": {
            "type": "object",
            "properties": {
                "player_uuid": {
                    "type": "string"
                },
                "profile_uuid": {
                    "type": "string"
                }
            }
        },
        "mongo.Pet": {
            "type": "object",
            "properties": {
                "candy": {
                    "type": "integer"
                },
                "current_owner": {
                    "$ref": "#/definitions/mongo.Owner"
                },
                "held_item": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_checked": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "previous_owner": {
                    "$ref": "#/definitions/mongo.Owner"
                },
                "rarity": {
                    "type": "string"
                },
                "skin": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "mongo.PlayerId": {
            "type": "object"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

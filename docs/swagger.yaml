basePath: /api/tem/
definitions:
  github.com_Coflnet_tem-backend_internal_api.ItemResponse:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/mongo.Item'
        type: array
      offset:
        type: integer
    type: object
  github.com_Coflnet_tem-backend_internal_api.PlayerResponse:
    properties:
      generic_items:
        items: {}
        type: array
      generic_pets:
        items:
          type: string
        type: array
      id:
        $ref: '#/definitions/mongo.PlayerId'
      items:
        items: {}
        type: array
      pets:
        items:
          $ref: '#/definitions/mongo.Pet'
        type: array
    type: object
  internal_api.ItemResponse:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/mongo.Item'
        type: array
      offset:
        type: integer
    type: object
  internal_api.PlayerResponse:
    properties:
      generic_items:
        items: {}
        type: array
      generic_pets:
        items:
          type: string
        type: array
      id:
        $ref: '#/definitions/mongo.PlayerId'
      items:
        items: {}
        type: array
      pets:
        items:
          $ref: '#/definitions/mongo.Pet'
        type: array
    type: object
  mongo.Item:
    properties:
      colour:
        type: integer
      createdAt:
        type: string
      currentOwner: {}
      enchantments: {}
      extraAttributes: {}
      id:
        type: string
      lastChecked:
        type: string
      location:
        type: string
      previousOwners:
        items: {}
        type: array
      rarity:
        type: string
      reforge:
        type: string
      start:
        type: string
    type: object
  mongo.ItemNotFoundError:
    properties:
      coflUid:
        type: string
      id:
        type: string
    type: object
  mongo.Owner:
    properties:
      player_uuid:
        type: string
      profile_uuid:
        type: string
    type: object
  mongo.Pet:
    properties:
      candy:
        type: integer
      current_owner:
        $ref: '#/definitions/mongo.Owner'
      held_item:
        type: string
      id:
        type: string
      last_checked:
        type: string
      level:
        type: integer
      location:
        type: string
      name:
        type: string
      previous_owner:
        $ref: '#/definitions/mongo.Owner'
      rarity:
        type: string
      skin:
        type: string
      start:
        type: string
    type: object
  mongo.PlayerId:
    type: object
host: sky.coflnet.com
info:
  contact:
    email: muehlhans.f@coflnet.com
    name: Flou21
    url: flou.dev
  description: A little backend for the tem db
  license:
    name: AGPL-3.0
  title: TEM Backend
  version: "1.0"
paths:
  /coflItem/{uid}:
    get:
      consumes:
      - application/json
      description: returns the item by its cofl uid
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mongo.Item'
        "400":
          description: Bad Request
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/mongo.ItemNotFoundError'
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: ItemByCoflUid
      tags:
      - items
  /item/{uuid}:
    get:
      consumes:
      - application/json
      description: returns the item by its uuid
      parameters:
      - description: id
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mongo.Item'
      summary: ItemByUUID
      tags:
      - items
  /items/{id}:
    get:
      consumes:
      - application/json
      description: returns the amount of items founds with an id and 1000 items with
        that id, sorted by creation time backwards (offset is possible)
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_Coflnet_tem-backend_internal_api.ItemResponse'
      summary: ItemByItemId
      tags:
      - items
  /player/{uuid}:
    get:
      consumes:
      - application/json
      description: get a player by his player uuid
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api.PlayerResponse'
      summary: PlayerUUID
      tags:
      - player
  /playerProfile/{uuid}:
    get:
      consumes:
      - application/json
      description: get a player by his profile uuid
      parameters:
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api.PlayerResponse'
      summary: ProfileUUID
      tags:
      - player
swagger: "2.0"

{
    "swagger": "2.0",
    "info": {
        "description": "A little backend for the tem db",
        "title": "TEM Backend",
        "contact": {
            "name": "Flou21",
            "url": "flou.dev",
            "email": "muehlhans.f@coflnet.com"
        },
        "license": {
            "name": "AGPL-3.0"
        },
        "version": "1.0"
    },
    "host": "sky.coflnet.com",
    "basePath": "/api/tem/",
    "paths": {
        "/coflItem/{uid}": {
            "get": {
                "description": "returns the item by its cofl uid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "ItemByCoflUid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mongo.Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/mongo.ItemNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/item/{uuid}": {
            "get": {
                "description": "returns the pet by its uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pets"
                ],
                "summary": "ItemByUUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mongo.Pet"
                        }
                    }
                }
            }
        },
        "/items/{id}": {
            "get": {
                "description": "returns the amount of items founds with an id and 1000 items with that id, sorted by creation time backwards (offset is possible)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "ItemByItemId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ItemResponse"
                        }
                    }
                }
            }
        },
        "/player/{uuid}": {
            "get": {
                "description": "get a player by his player uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "summary": "PlayerUUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github.com_Coflnet_tem-backend_internal_api.PlayerResponse"
                        }
                    }
                }
            }
        },
        "/playerProfile/{uuid}": {
            "get": {
                "description": "get a player by his profile uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "summary": "ProfileUUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github.com_Coflnet_tem-backend_internal_api.PlayerResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github.com_Coflnet_tem-backend_internal_api.ItemResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.Item"
                    }
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "github.com_Coflnet_tem-backend_internal_api.PlayerResponse": {
            "type": "object",
            "properties": {
                "generic_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.GenericItem"
                    }
                },
                "generic_pets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "$ref": "#/definitions/mongo.PlayerId"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.Item"
                    }
                },
                "pets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.Pet"
                    }
                }
            }
        },
        "internal_api.ItemResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.Item"
                    }
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "internal_api.PlayerResponse": {
            "type": "object",
            "properties": {
                "generic_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.GenericItem"
                    }
                },
                "generic_pets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "$ref": "#/definitions/mongo.PlayerId"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.Item"
                    }
                },
                "pets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.Pet"
                    }
                }
            }
        },
        "mongo.GenericItem": {
            "type": "object",
            "properties": {
                "enchantments": {},
                "extra_attributes": {},
                "id": {
                    "type": "string"
                },
                "item_id": {
                    "type": "string"
                },
                "rarity": {
                    "type": "string"
                },
                "reforge": {
                    "type": "string"
                }
            }
        },
        "mongo.Item": {
            "type": "object",
            "properties": {
                "colour": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "currentOwner": {
                    "$ref": "#/definitions/mongo.Owner"
                },
                "enchantments": {},
                "extraAttributes": {},
                "id": {
                    "type": "string"
                },
                "itemId": {
                    "type": "string"
                },
                "lastChecked": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "previousOwners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mongo.PreviousOwner"
                    }
                },
                "rarity": {
                    "type": "string"
                },
                "reforge": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "mongo.ItemNotFoundError": {
            "type": "object",
            "properties": {
                "coflUid": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "mongo.Owner": {
            "type": "object",
            "properties": {
                "playerUuid": {
                    "type": "string"
                },
                "profileUuid": {
                    "type": "string"
                }
            }
        },
        "mongo.Pet": {
            "type": "object",
            "properties": {
                "candy": {
                    "type": "integer"
                },
                "current_owner": {
                    "$ref": "#/definitions/mongo.Owner"
                },
                "held_item": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_checked": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "previous_owner": {
                    "$ref": "#/definitions/mongo.Owner"
                },
                "rarity": {
                    "type": "string"
                },
                "skin": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "mongo.PlayerId": {
            "type": "object"
        },
        "mongo.PreviousOwner": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/mongo.Owner"
                },
                "start": {
                    "type": "string"
                }
            }
        }
    }
}